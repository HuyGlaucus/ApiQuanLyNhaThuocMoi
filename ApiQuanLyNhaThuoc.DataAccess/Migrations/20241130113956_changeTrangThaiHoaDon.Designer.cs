// <auto-generated />
using System;
using ApiQuanLyNhaThuoc.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiQuanLyNhaThuoc.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241130113956_changeTrangThaiHoaDon")]
    partial class changeTrangThaiHoaDon
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Quyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThanhPho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.DanhMuc", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhMuc");

                    b.HasData(
                        new
                        {
                            Id = "DM111",
                            CreatedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2778),
                            MoTa = "Thuốc dị ứng",
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2789),
                            TenDanhMuc = "Thuốc"
                        },
                        new
                        {
                            Id = "DM112",
                            CreatedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2792),
                            MoTa = "Thuốc da liễu",
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2792),
                            TenDanhMuc = "Thuốc"
                        },
                        new
                        {
                            Id = "DM113",
                            CreatedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2794),
                            MoTa = "Thuốc hô hấp",
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2794),
                            TenDanhMuc = "Thuốc"
                        },
                        new
                        {
                            Id = "DM114",
                            CreatedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2795),
                            MoTa = "Vitamin & Khoáng chất",
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2796),
                            TenDanhMuc = "Thực phẩm chứng năng"
                        },
                        new
                        {
                            Id = "DM115",
                            CreatedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2797),
                            MoTa = "Hỗ trợ làm đẹp",
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2797),
                            TenDanhMuc = "Thực phẩm chứng năng"
                        },
                        new
                        {
                            Id = "DM116",
                            CreatedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2798),
                            MoTa = "Dinh dưỡng",
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(2799),
                            TenDanhMuc = "Thực phẩm chứng năng"
                        });
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.KhachHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RankKhachHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TichDiem")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.NhaCungCap", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuocGia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ThanhPho")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TrangThaiGiaoDich")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("NhaCungCap");

                    b.HasData(
                        new
                        {
                            Id = "NCC001",
                            CreatedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(3036),
                            DiaChi = "123 Lê Lợi",
                            Email = "longchaugv@gmail.com",
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(3038),
                            QuocGia = "Việt Nam",
                            SoDienThoai = "0123456789",
                            TenNhaCungCap = "Nhà thuốc Long Châu",
                            ThanhPho = "Hồ Chí Minh",
                            TrangThaiGiaoDich = 1,
                            Website = "longchau.com"
                        });
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.NhanVien", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaLamViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("HeSoLuong")
                        .HasColumnType("float");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.SanPham", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnhSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DanhMucId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DonViTinhNhoNhat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DuongDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HangSanXuat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoatChatChinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiThuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaThuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaVach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NuocSanXuat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuyCachDongGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDangKy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiBan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucId");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.ChiTietGiamGia", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("GiamGia")
                        .HasColumnType("float");

                    b.Property<string>("KhuyenMaiId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhienBanSanPhamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("KhuyenMaiId");

                    b.HasIndex("PhienBanSanPhamId");

                    b.ToTable("ChiTietGiamGia");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.ChiTietHoaDonBanHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<string>("HoaDonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhienBanSanPhamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("PhienBanSanPhamId");

                    b.ToTable("ChiTietHoaDonBanHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.ChiTietHoaDonBanHangOnline", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<string>("HoaDonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhienBanSanPhamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("PhienBanSanPhamId");

                    b.ToTable("ChiTietHoaDonBanHangOnline");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.ChiTietHoaDonDatHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HoaDonDatHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhienBanSanPhamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SoLuongDaNhap")
                        .HasColumnType("float");

                    b.Property<double>("SoLuongDat")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonDatHangId");

                    b.HasIndex("PhienBanSanPhamId");

                    b.ToTable("ChiTietHoaDonDatHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.ChiTietHoaDonNhapHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HoaDonNhapHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhienBanSanPhamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SoLuongNhap")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonNhapHangId");

                    b.HasIndex("LoHangId");

                    b.HasIndex("PhienBanSanPhamId");

                    b.ToTable("ChiTietHoaDonNhapHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.DiaChiKhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChiNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhachHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("MacDinh")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuanHuyenNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhThanhNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XaPhuongNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.ToTable("DiaChiKhachHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.GiaoHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChiNguoiGui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDonRutGon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyenNguoiGui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyenNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiNguoiGui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiGui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianGiaoHangDuKien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianLayHangDuKien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhThanhNguoiGui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhThanhNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TrackingNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("XaPhuongNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GiaoHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.GioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KhachHangId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhienBanSanPhamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("PhienBanSanPhamId");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HangTonKho", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhoHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhienBanSanPhamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SoLuongCoTheBan")
                        .HasColumnType("float");

                    b.Property<double>("SoLuongDangVe")
                        .HasColumnType("float");

                    b.Property<double>("SoLuongTrongKho")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("KhoHangId");

                    b.HasIndex("LoHangId");

                    b.HasIndex("PhienBanSanPhamId");

                    b.ToTable("HangTonKho");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonBanHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DungTichDiem")
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaoHangId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinhThucMuaHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhachHangId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhuyenMaiId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoaiHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("PhiVanChuyen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SoDiemTichLuyDung")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Thue")
                        .HasColumnType("float");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThaiDonHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GiaoHangId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("KhuyenMaiId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("HoaDonBanHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonBanHangOnline", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DungTichDiem")
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaoHangId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinhThucMuaHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhachHangId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhuyenMaiId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("PhiVanChuyen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SoDiemTichLuyDung")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Thue")
                        .HasColumnType("float");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThaiDonHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GiaoHangId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("KhuyenMaiId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("HoaDonBanHangOnline");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonDatHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhaCungCapId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NhanVienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Thue")
                        .HasColumnType("float");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThaiNhap")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NhaCungCapId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("HoaDonDatHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonNhapHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoaDonDatHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhoHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhaCungCapId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NhanVienId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Thue")
                        .HasColumnType("float");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThaiThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonDatHangId");

                    b.HasIndex("KhoHangId");

                    b.HasIndex("NhaCungCapId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("HoaDonNhapHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.KhoHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhienBanSanPhamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ViTriLuuTru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PhienBanSanPhamId");

                    b.ToTable("KhoHang");

                    b.HasData(
                        new
                        {
                            Id = "KHO001",
                            CreatedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(3072),
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 39, 53, 841, DateTimeKind.Local).AddTicks(3073),
                            ViTriLuuTru = "Chi nhánh mặc định"
                        });
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.KhuyenMai", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KhuyenMai");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.LoHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhoHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySanXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhaCungCapId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhienBanSanPhamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SoLuongQuyDoi")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("KhoHangId");

                    b.HasIndex("NhaCungCapId");

                    b.HasIndex("PhienBanSanPhamId");

                    b.ToTable("LoHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DonViQuyDoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaBanQuyDoi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaNhapQuyDoi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KhoiLuong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaVach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SanPhamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.Property<string>("TenQuyDoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiBan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SanPhamId");

                    b.ToTable("PhienBanSanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.TrangThaiHoaDonOnline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoaDonBanHangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HoaDonBanHangOnlineId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonBanHangId");

                    b.HasIndex("HoaDonBanHangOnlineId");

                    b.ToTable("TrangThaiHoaDonOnline");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "df93d03c-b89b-438a-93fe-4791c053b0ef",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "c111b536-11be-48f2-b70e-5a1078077a9c",
                            Name = "Employee POS",
                            NormalizedName = "EMPLOYEE POS"
                        },
                        new
                        {
                            Id = "870729ca-54d4-46ab-b800-06253f90a51d",
                            Name = "Employee Manager",
                            NormalizedName = "EMPLOYEE MANAGER"
                        },
                        new
                        {
                            Id = "a4f03907-61be-4b22-b47d-b3ea028c9bd9",
                            Name = "Employee Online",
                            NormalizedName = "EMPLOYEE ONLINE"
                        },
                        new
                        {
                            Id = "8c217271-4033-449c-93da-5f13821d4f6d",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.KhachHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.NhanVien", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.SanPham", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.DanhMuc", "DanhMuc")
                        .WithMany()
                        .HasForeignKey("DanhMucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMuc");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.ChiTietGiamGia", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.KhuyenMai", "KhuyenMai")
                        .WithMany()
                        .HasForeignKey("KhuyenMaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", "PhienBanSanPham")
                        .WithMany()
                        .HasForeignKey("PhienBanSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMai");

                    b.Navigation("PhienBanSanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.ChiTietHoaDonBanHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonBanHang", "HoaDon")
                        .WithMany("ChiTietHoaDonBanHangs")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", "PhienBanSanPham")
                        .WithMany()
                        .HasForeignKey("PhienBanSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("PhienBanSanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.ChiTietHoaDonBanHangOnline", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonBanHangOnline", "HoaDon")
                        .WithMany("ChiTietHoaDonBanHangs")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", "PhienBanSanPham")
                        .WithMany()
                        .HasForeignKey("PhienBanSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("PhienBanSanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.ChiTietHoaDonDatHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonDatHang", "HoaDonDatHang")
                        .WithMany("ChiTietHoaDonDatHangs")
                        .HasForeignKey("HoaDonDatHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", "PhienBanSanPham")
                        .WithMany("ChiTietHoaDonDatHangs")
                        .HasForeignKey("PhienBanSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDonDatHang");

                    b.Navigation("PhienBanSanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.ChiTietHoaDonNhapHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonNhapHang", "HoaDonNhapHang")
                        .WithMany("ChiTietHoaDonNhapHangs")
                        .HasForeignKey("HoaDonNhapHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.LoHang", "LoHang")
                        .WithMany()
                        .HasForeignKey("LoHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", "PhienBanSanPham")
                        .WithMany("ChiTietHoaDonNhapHangs")
                        .HasForeignKey("PhienBanSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDonNhapHang");

                    b.Navigation("LoHang");

                    b.Navigation("PhienBanSanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.DiaChiKhachHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.GioHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangId");

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", "PhienBanSanPham")
                        .WithMany()
                        .HasForeignKey("PhienBanSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("PhienBanSanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HangTonKho", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.KhoHang", "KhoHang")
                        .WithMany("HangTonKhos")
                        .HasForeignKey("KhoHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.LoHang", "LoHang")
                        .WithMany()
                        .HasForeignKey("LoHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", "PhienBanSanPham")
                        .WithMany()
                        .HasForeignKey("PhienBanSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoHang");

                    b.Navigation("LoHang");

                    b.Navigation("PhienBanSanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonBanHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.GiaoHang", "GiaoHang")
                        .WithMany()
                        .HasForeignKey("GiaoHangId");

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangId");

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.KhuyenMai", "KhuyenMai")
                        .WithMany()
                        .HasForeignKey("KhuyenMaiId");

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId");

                    b.Navigation("GiaoHang");

                    b.Navigation("KhachHang");

                    b.Navigation("KhuyenMai");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonBanHangOnline", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.GiaoHang", "GiaoHang")
                        .WithMany()
                        .HasForeignKey("GiaoHangId");

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangId");

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.KhuyenMai", "KhuyenMai")
                        .WithMany()
                        .HasForeignKey("KhuyenMaiId");

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId");

                    b.Navigation("GiaoHang");

                    b.Navigation("KhachHang");

                    b.Navigation("KhuyenMai");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonDatHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany()
                        .HasForeignKey("NhaCungCapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonNhapHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonDatHang", "HoaDonDatHang")
                        .WithMany("HoaDonNhapHangs")
                        .HasForeignKey("HoaDonDatHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.KhoHang", "KhoHang")
                        .WithMany("HoaDonNhapHangs")
                        .HasForeignKey("KhoHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("HoaDonNhapHangs")
                        .HasForeignKey("NhaCungCapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDonDatHang");

                    b.Navigation("KhoHang");

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.KhoHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", null)
                        .WithMany("KhoHangs")
                        .HasForeignKey("PhienBanSanPhamId");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.LoHang", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.KhoHang", "KhoHang")
                        .WithMany("LoHangs")
                        .HasForeignKey("KhoHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("LoHangs")
                        .HasForeignKey("NhaCungCapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", "PhienBanSanPham")
                        .WithMany("LoHangs")
                        .HasForeignKey("PhienBanSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoHang");

                    b.Navigation("NhaCungCap");

                    b.Navigation("PhienBanSanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.SanPham", "SanPham")
                        .WithMany("DanhSachPhienBan")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.TrangThaiHoaDonOnline", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonBanHang", "HoaDonBanHang")
                        .WithMany("Timeline")
                        .HasForeignKey("HoaDonBanHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonBanHangOnline", null)
                        .WithMany("Timeline")
                        .HasForeignKey("HoaDonBanHangOnlineId");

                    b.Navigation("HoaDonBanHang");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ApiQuanLyNhaThuoc.Models.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.NhaCungCap", b =>
                {
                    b.Navigation("HoaDonNhapHangs");

                    b.Navigation("LoHangs");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Entities.SanPham", b =>
                {
                    b.Navigation("DanhSachPhienBan");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonBanHang", b =>
                {
                    b.Navigation("ChiTietHoaDonBanHangs");

                    b.Navigation("Timeline");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonBanHangOnline", b =>
                {
                    b.Navigation("ChiTietHoaDonBanHangs");

                    b.Navigation("Timeline");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonDatHang", b =>
                {
                    b.Navigation("ChiTietHoaDonDatHangs");

                    b.Navigation("HoaDonNhapHangs");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.HoaDonNhapHang", b =>
                {
                    b.Navigation("ChiTietHoaDonNhapHangs");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.KhoHang", b =>
                {
                    b.Navigation("HangTonKhos");

                    b.Navigation("HoaDonNhapHangs");

                    b.Navigation("LoHangs");
                });

            modelBuilder.Entity("ApiQuanLyNhaThuoc.Models.Models.Entities.PhienBanSanPham", b =>
                {
                    b.Navigation("ChiTietHoaDonDatHangs");

                    b.Navigation("ChiTietHoaDonNhapHangs");

                    b.Navigation("KhoHangs");

                    b.Navigation("LoHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
